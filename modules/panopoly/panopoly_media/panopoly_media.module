<?php

/**
 * @file
 * Hook implementations for Panopoly Media.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\panopoly_media\Plugin\Field\FieldWidget\ImageWidget;

/**
 * Implements hook_theme().
 */
function panopoly_media_theme() {
  return [
    'media__image' => [
      'base hook' => 'media',
    ],
    'media__file' => [
      'base hook' => 'media',
    ],
    'media__video' => [
      'base hook' => 'media',
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alters the display mode offerings of the embed entity module to be more
 * user friendly, and reflect what is available.
 */
function panopoly_media_form_entity_embed_dialog_alter(&$form, FormStateInterface $form_state) {
  if ($form_state->get('step') == 'embed') {
    /** @var \Drupal\Core\Entity\EntityInterface $entity */
    $entity = $form_state->get('entity');
    switch ($entity->bundle()) {
      case 'image':
        $options =& $form['attributes']['data-entity-embed-display']['#options'];
        $enabled_options = [
          'view_mode:media.embed_large' => t('Original size'),
          'view_mode:media.embed_medium' => t('Quarter size'),
          'view_mode:media.embed_small' => t('Thumbnail'),
          'entity_reference:media_thumbnail' => t('Custom'),
        ];
        foreach ($options as $key => $option) {
          if (isset($enabled_options)) {
            $options[$key] = $enabled_options[$key];
          }
          else {
            unset($options[$key]);
          }
        }

        $embed_display_element =& $form['attributes']['data-entity-embed-display-settings'];
        if (array_key_exists('image_style', $embed_display_element)) {
          foreach ($embed_display_element['image_style']['#options'] as $key => $option) {
            // @todo: Expose this as a setting in Panopoly settings.
            if (strpos($key, 'panopoly_') === FALSE) {
              unset($embed_display_element['image_style']['#options'][$key]);
            }
          }
        }
        break;
      // There are no custom displays for files or videos. Force to default
      // for now, until file (PDF preview) or video formatters (set size) added.
      case 'video':
      case 'file':
        $form['attributes']['data-entity-embed-display']['#default_value'] = 'view_mode:media.embed_large';
        $form['attributes']['data-entity-embed-display']['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_field_formatter_info_alter().
 */
function panopoly_media_field_formatter_info_alter(&$definitions) {
  if (isset($definitions['file_default']) && !in_array('image', $definitions['file_default']['field_types'])) {
    $definitions['file_default']['field_types'][] = 'image';
  }
}

/**
 * Implements hook_field_widget_info_alter().
 */
function panopoly_media_field_widget_info_alter(array &$info) {
  $info['image_image']['class'] = ImageWidget::class;
}

/**
 * Implements hook_inline_entity_form_entity_form_alter().
 */
function panopoly_media_inline_entity_form_entity_form_alter(&$entity_form, &$form_state) {
  // Only deal with media.
  if ($entity_form['#entity_type'] != 'media') {
    return;
  }

  $entity_form['revision_log_message']['#access'] = FALSE;
}
